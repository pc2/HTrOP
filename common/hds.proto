//    Copyright (c) 2019 University of Paderborn 
//                         (Gavin Vaz <gavin.vaz@uni-paderborn.de>,
//                          Heinrich Riebler <heinrich.riebler@uni-paderborn.de>)

//    Permission is hereby granted, free of charge, to any person obtaining a copy
//    of this software and associated documentation files (the "Software"), to deal
//    in the Software without restriction, including without limitation the rights
//    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//    copies of the Software, and to permit persons to whom the Software is
//    furnished to do so, subject to the following conditions:

//    The above copyright notice and this permission notice shall be included in
//    all copies or substantial portions of the Software.

//    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//    THE SOFTWARE.


//Use this to generate the .h and .cc files in the common dir
//protoc -I=. --cpp_out=. hds.proto

package HTROP_PB;

message LLVM_IR_Req{
}

message BinaryData{
    optional bytes binary_data = 1;
}

//Codegen request from HTROP Client (RC) -> HTROP Server (RS) 
message Message_RCRS {
    message ScopInfo{
        optional string scopFunctionName = 1;
        optional uint32 max_codegen_loop_depth = 2;
    };
    repeated ScopInfo scopList = 1;
    optional string scopFunctionParentName = 2;
}


message Message_RSRC {
    message ScopFunctionOCLInfo{
        optional string scopFunctionName = 1;
        optional string scopOCLKernelName = 2;
        repeated int32 workgroup_arg_index = 3; 
        repeated int32 workgroup_arg_index_offset = 4;
    };
    repeated ScopFunctionOCLInfo scopFunctions = 1;
    optional string oclKernelFileName = 2;
    optional uint32 binarySize = 3;
}
